{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"ref. Functional API.ipynb의 사본","provenance":[{"file_id":"1ZIAxp_76cRxAQk-iubV7wIg8se3GINdh","timestamp":1602501672405}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"aFv8kd0WcKBr","executionInfo":{"status":"ok","timestamp":1602501744560,"user_tz":-540,"elapsed":2765,"user":{"displayName":"Eunkyeol Jo","photoUrl":"https://lh6.googleusercontent.com/-u_lq-bP2lAw/AAAAAAAAAAI/AAAAAAAAXHQ/jU9pUt-7YAg/s64/photo.jpg","userId":"15539155980125991873"}}},"source":["import tensorflow as tf\n","from tensorflow import keras"],"execution_count":1,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"VwYDV7KAZsCF"},"source":["## Functional API를 활용 한 실습"]},{"cell_type":"code","metadata":{"id":"pT9m1y6Pb3D4"},"source":["# 모델 구성\n","inputs = keras.Input(shape=(28, 28, 1)) # Input을 선언\n","\n","x = keras.layers.Flatten()(inputs)\n","x = keras.layers.Dense(256, activation='relu')(x)\n","x = keras.layers.Dense(128, activation='relu')(x)\n","x = keras.layers.Dropout(rate=0.2)(x)\n","predictions = keras.layers.Dense(10, activation='softmax')(x)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Ken0Gm9acsTo"},"source":["# 모델 학습\n","model = keras.Model(\n","    inputs=inputs,\n","    outputs=predictions\n",")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"2iWu98RX1Z1R","executionInfo":{"status":"ok","timestamp":1600954412006,"user_tz":-540,"elapsed":2397,"user":{"displayName":"Ji-hoon Kim","photoUrl":"","userId":"13472183013488020071"}},"outputId":"33a58c2a-9cad-4349-8ca6-7e19dfb3cf7d","colab":{"base_uri":"https://localhost:8080/","height":367}},"source":["model.summary()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Model: \"functional_1\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","input_1 (InputLayer)         [(None, 28, 28, 1)]       0         \n","_________________________________________________________________\n","flatten (Flatten)            (None, 784)               0         \n","_________________________________________________________________\n","dense (Dense)                (None, 256)               200960    \n","_________________________________________________________________\n","dense_1 (Dense)              (None, 128)               32896     \n","_________________________________________________________________\n","dropout (Dropout)            (None, 128)               0         \n","_________________________________________________________________\n","dense_2 (Dense)              (None, 10)                1290      \n","=================================================================\n","Total params: 235,146\n","Trainable params: 235,146\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"b04GhSF01cRG"},"source":["# mnist 데이터셋을 활용\n","\n","mnist = keras.datasets.mnist\n","\n","(x_train, y_train), (x_test, y_test) = mnist.load_data()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"PZFhVp0s2Eg0"},"source":["x_train, x_test = x_train/255., x_test/255."],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"VJvpUpdv1yKF"},"source":["# model.compile : 모델 학습에 필요한 정보 설정\n","\n","model.compile(optimizer='adam',\n","              loss='sparse_categorical_crossentropy',\n","              metrics=['accuracy'])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"58oJKggV12w1","executionInfo":{"status":"ok","timestamp":1600954522568,"user_tz":-540,"elapsed":111984,"user":{"displayName":"Ji-hoon Kim","photoUrl":"","userId":"13472183013488020071"}},"outputId":"622fb092-1070-4bb1-f49e-82935fe134fb","colab":{"base_uri":"https://localhost:8080/","height":422}},"source":["# 모델 학습\n","\n","model.fit(x=x_train, y=y_train,\n","          epochs=10,\n","          batch_size=10)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Epoch 1/10\n","6000/6000 [==============================] - 11s 2ms/step - loss: 0.2064 - accuracy: 0.9376\n","Epoch 2/10\n","6000/6000 [==============================] - 11s 2ms/step - loss: 0.1008 - accuracy: 0.9688\n","Epoch 3/10\n","6000/6000 [==============================] - 11s 2ms/step - loss: 0.0761 - accuracy: 0.9772\n","Epoch 4/10\n","6000/6000 [==============================] - 11s 2ms/step - loss: 0.0596 - accuracy: 0.9812\n","Epoch 5/10\n","6000/6000 [==============================] - 11s 2ms/step - loss: 0.0514 - accuracy: 0.9847\n","Epoch 6/10\n","6000/6000 [==============================] - 11s 2ms/step - loss: 0.0429 - accuracy: 0.9874\n","Epoch 7/10\n","6000/6000 [==============================] - 11s 2ms/step - loss: 0.0397 - accuracy: 0.9884\n","Epoch 8/10\n","6000/6000 [==============================] - 11s 2ms/step - loss: 0.0351 - accuracy: 0.9899\n","Epoch 9/10\n","6000/6000 [==============================] - 11s 2ms/step - loss: 0.0340 - accuracy: 0.9903\n","Epoch 10/10\n","6000/6000 [==============================] - 11s 2ms/step - loss: 0.0308 - accuracy: 0.9908\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["<tensorflow.python.keras.callbacks.History at 0x7fb3315b6f98>"]},"metadata":{"tags":[]},"execution_count":13}]},{"cell_type":"code","metadata":{"id":"EQgIrI9Az9KP"},"source":["from tensorflow.keras.datasets import cifar10"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"S3FQZIAs2G60","executionInfo":{"status":"ok","timestamp":1601029830791,"user_tz":-540,"elapsed":7320,"user":{"displayName":"Ji-hoon Kim","photoUrl":"","userId":"13472183013488020071"}},"outputId":"d0596381-8ef1-4569-bb0f-21692a4f968b","colab":{"base_uri":"https://localhost:8080/","height":53}},"source":["# cifar10 데이터셋을 활용\n","(x_train, y_train), (x_test, y_test) = cifar10.load_data()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Downloading data from https://www.cs.toronto.edu/~kriz/cifar-10-python.tar.gz\n","170500096/170498071 [==============================] - 4s 0us/step\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"G1ICCT6_3wj7"},"source":["x_train, x_test = x_train/255., x_test/255."],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"gkL4yF6Y36rq","executionInfo":{"status":"ok","timestamp":1599470573329,"user_tz":-540,"elapsed":1938,"user":{"displayName":"Ji-hoon Kim","photoUrl":"","userId":"13472183013488020071"}},"outputId":"ed07cc41-7f8b-4ffe-df66-59fe5f3fde12","colab":{"base_uri":"https://localhost:8080/","height":35}},"source":["x_train.shape, y_train.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((50000, 32, 32, 3), (50000, 1))"]},"metadata":{"tags":[]},"execution_count":22}]},{"cell_type":"code","metadata":{"id":"g0j3e4K53-Ik"},"source":["# 모델 구성\n","input = keras.Input(shape=(32, 32, 3))\n","\n","x = keras.layers.Conv2D(32, (3, 3), activation='relu')(input)\n","x = keras.layers.MaxPooling2D((2, 2))(x)\n","x = keras.layers.Conv2D(64, (3, 3), activation='relu')(x)\n","x = keras.layers.MaxPooling2D((2, 2))(x)\n","x = keras.layers.Conv2D(64, (3, 3), activation='relu')(x)\n","\n","x = keras.layers.Flatten()(x)\n","x = keras.layers.Dense(64, activation='relu')(x)\n","prediction = keras.layers.Dense(10, activation='softmax')(x)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"igfa5d4T4V0C"},"source":["# 모델 객체 생성\n","model = keras.Model(\n","    inputs=input,\n","    outputs=prediction\n",")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"JC9zi50b4F76","executionInfo":{"status":"ok","timestamp":1601031001893,"user_tz":-540,"elapsed":931,"user":{"displayName":"Ji-hoon Kim","photoUrl":"","userId":"13472183013488020071"}},"outputId":"cc7df7b0-98df-4b43-82dc-23ef1bb4f9e5","colab":{"base_uri":"https://localhost:8080/","height":485}},"source":["model.summary()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Model: \"functional_1\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","input_2 (InputLayer)         [(None, 32, 32, 3)]       0         \n","_________________________________________________________________\n","conv2d_3 (Conv2D)            (None, 30, 30, 32)        896       \n","_________________________________________________________________\n","max_pooling2d_2 (MaxPooling2 (None, 15, 15, 32)        0         \n","_________________________________________________________________\n","conv2d_4 (Conv2D)            (None, 13, 13, 64)        18496     \n","_________________________________________________________________\n","max_pooling2d_3 (MaxPooling2 (None, 6, 6, 64)          0         \n","_________________________________________________________________\n","conv2d_5 (Conv2D)            (None, 4, 4, 64)          36928     \n","_________________________________________________________________\n","flatten (Flatten)            (None, 1024)              0         \n","_________________________________________________________________\n","dense (Dense)                (None, 64)                65600     \n","_________________________________________________________________\n","dense_1 (Dense)              (None, 10)                650       \n","=================================================================\n","Total params: 122,570\n","Trainable params: 122,570\n","Non-trainable params: 0\n","_________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"zjBoFjbE4JfK"},"source":["# model.compile : 모델 학습에 필요한 정보 설정\n","model.compile(optimizer='adam',\n","              loss='sparse_categorical_crossentropy',\n","              metrics=['accuracy'])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ij2Q_aiX4MrC","executionInfo":{"status":"ok","timestamp":1601031656461,"user_tz":-540,"elapsed":554976,"user":{"displayName":"Ji-hoon Kim","photoUrl":"","userId":"13472183013488020071"}},"outputId":"0709017e-6e30-4da3-9600-fc5bba2d66dc","colab":{"base_uri":"https://localhost:8080/","height":415}},"source":["# 모델 학습\n","model.fit(x=x_train, y=y_train,\n","          epochs=10,\n","          batch_size=32,\n","          validation_split=0.2)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Epoch 1/10\n","1250/1250 [==============================] - 55s 44ms/step - loss: 1.8330 - accuracy: 0.3778 - val_loss: 1.4361 - val_accuracy: 0.4866\n","Epoch 2/10\n","1250/1250 [==============================] - 54s 43ms/step - loss: 1.3560 - accuracy: 0.5136 - val_loss: 1.3229 - val_accuracy: 0.5338\n","Epoch 3/10\n","1250/1250 [==============================] - 55s 44ms/step - loss: 1.1977 - accuracy: 0.5785 - val_loss: 1.3183 - val_accuracy: 0.5462\n","Epoch 4/10\n","1250/1250 [==============================] - 56s 45ms/step - loss: 1.1008 - accuracy: 0.6118 - val_loss: 1.1807 - val_accuracy: 0.5950\n","Epoch 5/10\n","1250/1250 [==============================] - 55s 44ms/step - loss: 1.0262 - accuracy: 0.6413 - val_loss: 1.1332 - val_accuracy: 0.6016\n","Epoch 6/10\n","1250/1250 [==============================] - 55s 44ms/step - loss: 0.9544 - accuracy: 0.6676 - val_loss: 1.0786 - val_accuracy: 0.6318\n","Epoch 7/10\n","1250/1250 [==============================] - 55s 44ms/step - loss: 0.8892 - accuracy: 0.6906 - val_loss: 1.1105 - val_accuracy: 0.6277\n","Epoch 8/10\n","1250/1250 [==============================] - 55s 44ms/step - loss: 0.8340 - accuracy: 0.7116 - val_loss: 1.0573 - val_accuracy: 0.6427\n","Epoch 9/10\n","1250/1250 [==============================] - 56s 45ms/step - loss: 0.7792 - accuracy: 0.7316 - val_loss: 1.0708 - val_accuracy: 0.6435\n","Epoch 10/10\n","1250/1250 [==============================] - 56s 45ms/step - loss: 0.7427 - accuracy: 0.7412 - val_loss: 1.1112 - val_accuracy: 0.6495\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["<tensorflow.python.keras.callbacks.History at 0x7f3e8962cbe0>"]},"metadata":{"tags":[]},"execution_count":12}]}]}